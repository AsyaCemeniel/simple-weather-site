{"version":3,"sources":["components/todayForecast/todayForecast.module.scss","components/dailyForecast/dailyForecast.module.scss","components/favoriteLocation/favoriteLocation.module.scss","pages/mainPage/mainPage.module.scss","pages/404page/pageNotFound.module.scss","components/search/search.module.scss","components/skeleton/favoriteSkeleton/favoriteSkeleton.module.scss","pages/favorites/favorites.module.scss","components/header/header.module.scss","components/star/star.module.scss","components/themeButton/themeButton.module.scss","components/skeleton/skeleton.module.scss","components/measureButton/measureButton.module.scss","hooks.ts","icons/space_moon.svg","icons/space_sun.svg","redux/actions/parametersActions.ts","components/themeButton/themeButton.tsx","icons/star.svg","components/header/header.tsx","icons/sunny.svg","icons/cloud_foggy.svg","icons/cloud_snowflake.svg","icons/cloud.svg","icons/cloudy_lightning.svg","icons/cloudy_moon.svg","icons/cloudy_sunny.svg","icons/drop.svg","icons/fog.svg","icons/hot.svg","icons/lightning.svg","icons/moon.svg","icons/night_raining.svg","icons/rain.svg","icons/raining_sun.svg","icons/snow.svg","icons/snowflake.svg","icons/wind.svg","utils/data.ts","components/skeleton/skeleton.tsx","components/skeleton/favoriteSkeleton/favoriteSkeleton.tsx","components/todayForecast/todayForecast.tsx","components/dailyForecast/dailyForecast.tsx","icons/blue_search.svg","utils/index.ts","utils/api.ts","redux/actions/mainActions.ts","redux/actions/searchActions.ts","components/search/search.tsx","redux/actions/favoritesActions.ts","components/star/star.tsx","components/measureButton/measureButton.tsx","pages/mainPage/mainPage.tsx","components/favoriteLocation/favoriteLocation.tsx","pages/favorites/favorites.tsx","pages/404page/pageNotFound.tsx","App.tsx","reportWebVitals.ts","redux/reducers/mainReducer.ts","redux/reducers/favoritesReducer.ts","redux/reducers/parametersReducer.ts","redux/reducers/searchReducer.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["module","exports","useDispatch","dispatchHook","useSelector","selectorHook","useStateWithLocalStorage","localStorageKey","useState","localStorage","getItem","value","setValue","useEffect","setItem","SET_THEME","SET_MEASURE","ThemeButton","dispatch","isDark","store","ParametersReducer","theme","themeIcon","light","dark","themeClass","styles","type","payload","className","src","alt","onClick","Header","container","main","to","logo","control","favorites","star","fiveDaysForecast","date","weekDay","icon","maxTemp","c","f","minTemp","weatherText","icons","sunny","cloudy_sunny","cloud","cloud_foggy","fog","drop","raining_sun","cloudy_lightning","lightning","rain","snow","cloud_snowflake","snowflake","hot","wind","moon","cloudy_moon","night_raining","Skeleton","parameters","skeleton","style","height","FavoriteSkeleton","wrapper","today","width","marginTop","borderRadius","temperature","TodayForecast","isMetric","todayForecast","MainReducer","currentForecast","loading","currentForecastRequest","failLoading","currentForecastFailure","currentIcon","minMaxTemp","first_column","maxWidth","second_column","day_info","weather","box","error","current_temp","currentTemp","day","text","humidity","m","i","DailyForecast","dayLoading","weekLoading","weekForecastRequest","celsiusToFahrenheit","API_KEY","process","BASE_URL","handleRequest","res","ok","json","then","Promise","reject","getCurrentWeather","key","a","fetch","getFiveDaysWeather","getSearchList","location","GET_CURRENT_FORECAST_REQUEST","GET_CURRENT_FORECAST_SUCCESS","GET_CURRENT_FORECAST_FAILURE","GET_WEEK_FORECAST_REQUEST","GET_WEEK_FORECAST_SUCCESS","GET_WEEK_FORECAST_FAILURE","SET_LOCATION","GET_OPTIONS_LIST_REQUEST","GET_OPTIONS_LIST_SUCCESS","GET_OPTIONS_LIST_FAILURE","DELETE_OPTIONS_LIST","Search","options","currentLocationName","currentLocation","city","setLocation","display","setDisplay","locationName","setName","searchValue","delay","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout","useDebounce","map","option","Key","LocalizedName","country","Country","console","onChange","e","target","blueSearch","dropdown","index","HandelClick","current_location","GET_FAVORITES_LIST_REQUEST","GET_FAVORITES_LIST_SUCCESS","GET_FAVORITES_LIST_FAILURE","CLEAR_FAVORITES_LIST","ADD_OR_REMOVE_FAVORITES","Star","isActive","setActive","FavoritesReducer","isFavorites","Boolean","find","length","JSON","parse","prevState","result","filter","stringify","full_star","empty_star","MeasureButton","measure","buttonText","button","MainPage","weekForecast","SearchReducer","optionsList","locationKey","data","currentDay","Date","LocalObservationDateTime","Math","round","Temperature","Metric","Value","Imperial","TemperatureSummary","Past24HourRange","Maximum","Minimum","String","Wind","Speed","toLocaleString","weekday","month","WeatherIcon","WeatherText","RelativeHumidity","Error","DailyForecasts","shift","Day","Icon","IconPhrase","getWeekForecast","circle","back_circle","content","current_box","search_box","week_box","weather_block","FavoriteLocation","favorite","current","delete_btn","favLocation","Favorites","favoritesList","favoritesFromStorage","isLoading","getFavoriteForecast","title","item","PageNotFound","number","big_circle","small_circle","info","not_found","App","currentTheme","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","weekForecastFailure","favoritesListRequest","favoritesListFailure","optionsListRequest","optionsListFailure","rootReducer","combineReducers","state","action","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a27eacb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"todayForecast_container__1XnPm\",\"main\":\"todayForecast_main__2DdvD\",\"first_column\":\"todayForecast_first_column__3LfUM\",\"icon\":\"todayForecast_icon__n1zU1\",\"temperature\":\"todayForecast_temperature__3Jbws\",\"current_temp\":\"todayForecast_current_temp__3-I4k\",\"second_column\":\"todayForecast_second_column__2nE_C\",\"day_info\":\"todayForecast_day_info__3YT-J\",\"date\":\"todayForecast_date__14zX0\",\"day\":\"todayForecast_day__KxwgF\",\"weather\":\"todayForecast_weather__3u6Jh\",\"parameters\":\"todayForecast_parameters__G2cHr\",\"wind\":\"todayForecast_wind__2xbec\",\"text\":\"todayForecast_text__1EDRz\",\"box\":\"todayForecast_box__10F0X\",\"error\":\"todayForecast_error__26R1u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dailyForecast_container__Dnbqk\",\"main\":\"dailyForecast_main__e-r94\",\"today\":\"dailyForecast_today__30G0k\",\"day\":\"dailyForecast_day__3BCYw\",\"date\":\"dailyForecast_date__2I1Yn\",\"weather\":\"dailyForecast_weather__ssihX\",\"temperature\":\"dailyForecast_temperature__ms79R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"favoriteLocation_wrapper__3rY09\",\"container\":\"favoriteLocation_container__1UjJg\",\"main\":\"favoriteLocation_main__38qNz\",\"today\":\"favoriteLocation_today__3-xnV\",\"city\":\"favoriteLocation_city__2vGp0\",\"country\":\"favoriteLocation_country__1UV4Z\",\"icon\":\"favoriteLocation_icon__2j3o4\",\"weather\":\"favoriteLocation_weather__1AA6H\",\"temperature\":\"favoriteLocation_temperature__2_Cfz\",\"delete_btn\":\"favoriteLocation_delete_btn__122fi\",\"current\":\"favoriteLocation_current__2tIF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"mainPage_container__A4rd_\",\"circle\":\"mainPage_circle__2gxfG\",\"back_circle\":\"mainPage_back_circle__1GASS\",\"main\":\"mainPage_main__1EieN\",\"content\":\"mainPage_content__GBaMC\",\"current_box\":\"mainPage_current_box__3W8aZ\",\"search_box\":\"mainPage_search_box__9gQt-\",\"week_box\":\"mainPage_week_box__3-UpQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"pageNotFound_container__2y0xP\",\"number\":\"pageNotFound_number__1eK8T\",\"big_circle\":\"pageNotFound_big_circle__25dz3\",\"small_circle\":\"pageNotFound_small_circle__3f9iX\",\"info\":\"pageNotFound_info__3cstQ\",\"not_found\":\"pageNotFound_not_found__33zW6\",\"button\":\"pageNotFound_button__1LONu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"search_container__3R_RU\",\"main\":\"search_main__rldfC\",\"dropdown\":\"search_dropdown__IhFk4\",\"option\":\"search_option__3J5Ka\",\"city\":\"search_city__qB8Lf\",\"country\":\"search_country__3iSzp\",\"current_location\":\"search_current_location__P96j7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"favoriteSkeleton_wrapper__2AcEU\",\"container\":\"favoriteSkeleton_container__35MND\",\"main\":\"favoriteSkeleton_main__3G4nr\",\"today\":\"favoriteSkeleton_today__YwzHt\",\"icon\":\"favoriteSkeleton_icon__1JGDg\",\"temperature\":\"favoriteSkeleton_temperature__1Smi9\",\"weather\":\"favoriteSkeleton_weather__2Tl8d\",\"current\":\"favoriteSkeleton_current__jJ99z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"favorites_container__2J39h\",\"main\":\"favorites_main__1zg87\",\"title\":\"favorites_title__3JfpW\",\"favorites\":\"favorites_favorites__3OpNd\",\"favorite\":\"favorites_favorite__147uN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__2Tec-\",\"main\":\"header_main__I1huP\",\"logo\":\"header_logo__Ns7Oo\",\"control\":\"header_control__1wkiB\",\"favorites\":\"header_favorites__abIR7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"star_container__xONRm\",\"star\":\"star_star__2k9wJ\",\"full_star\":\"star_full_star__23RpW\",\"shake-animation\":\"star_shake-animation__10DAS\",\"empty_star\":\"star_empty_star__1CyDf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"themeButton_light__2kv5K\",\"dark\":\"themeButton_dark__1yLlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skeleton\":\"skeleton_skeleton__3Wt_h\",\"pulse\":\"skeleton_pulse__msl4Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"measureButton_button__5DgKi\"};","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook,\r\n} from \"react-redux\";\r\nimport { AppDispatch, AppThunk, RootState } from \"./types\";\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n\r\nexport const useStateWithLocalStorage = (\r\n  localStorageKey: string\r\n): [string, Dispatch<SetStateAction<string>>] => {\r\n  const [value, setValue] = useState(\r\n    localStorage.getItem(localStorageKey) || \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, value);\r\n  }, [value]);\r\n\r\n  return [value, setValue];\r\n};\r\n\r\nexport const useDebounce = (value: string, delay?: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState<string>(value);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/space_moon.92b3119a.svg\";","export default __webpack_public_path__ + \"static/media/space_sun.2bc727f7.svg\";","export const SET_THEME = \"SET_THEME\" as const;\r\nexport const SET_MEASURE = \"SET_MEASURE\" as const;\r\n\r\nexport interface ISetTheme {\r\n  readonly type: typeof SET_THEME;\r\n  payload: \"dark\" | \"light\";\r\n}\r\n\r\nexport interface ISetMeasure {\r\n  readonly type: typeof SET_MEASURE;\r\n  payload: \"metric\" | \"imperial\";\r\n}\r\n\r\nexport type ParametersActions = ISetTheme | ISetMeasure;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useSelector,\r\n  useDispatch,\r\n  useStateWithLocalStorage,\r\n} from \"../../hooks\";\r\nimport styles from \"./themeButton.module.scss\";\r\nimport dark from \"../../icons/space_moon.svg\";\r\nimport light from \"../../icons/space_sun.svg\";\r\nimport { SET_THEME } from \"../../redux/actions/parametersActions\";\r\n\r\nexport const ThemeButton = () => {\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useStateWithLocalStorage(\"theme\");\r\n\r\n  const theme = useSelector((store) => store.ParametersReducer.theme);\r\n  const isDark = theme === \"dark\";\r\n\r\n  const themeIcon = isDark ? light : dark;\r\n  const themeClass = isDark ? styles.dark : styles.light;\r\n\r\n  useEffect(() => {\r\n    if (value) {\r\n      dispatch({\r\n        type: SET_THEME,\r\n        payload: value,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const switcher = () => {\r\n    dispatch({\r\n      type: SET_THEME,\r\n      payload: isDark ? \"light\" : \"dark\",\r\n    });\r\n    setValue(isDark ? \"light\" : \"dark\");\r\n  };\r\n\r\n  return (\r\n    <div className={themeClass}>\r\n      <img src={themeIcon} alt=\"theme img\" onClick={switcher} />\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/star.a738bef6.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ThemeButton } from \"../themeButton\";\r\nimport styles from \"./header.module.scss\";\r\nimport star from \"../../icons/star.svg\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header className={styles.container}>\r\n      <div className={styles.main}>\r\n        <Link to=\"/simple-weather-site\" className={styles.logo}>\r\n          <span>*Your Weather</span>\r\n        </Link>\r\n        <div className={styles.control}>\r\n          <div className={styles.favorites}>\r\n            <img src={star} alt=\"star img\" />\r\n            <Link to=\"/favorites\">Favorites</Link>\r\n          </div>\r\n          <ThemeButton />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/sunny.c8b63169.svg\";","export default __webpack_public_path__ + \"static/media/cloud_foggy.12580af4.svg\";","export default __webpack_public_path__ + \"static/media/cloud_snowflake.cf71b48f.svg\";","export default __webpack_public_path__ + \"static/media/cloud.3d82b4cb.svg\";","export default __webpack_public_path__ + \"static/media/cloudy_lightning.ef647eea.svg\";","export default __webpack_public_path__ + \"static/media/cloudy_moon.b7cec79e.svg\";","export default __webpack_public_path__ + \"static/media/cloudy_sunny.b02014c0.svg\";","export default __webpack_public_path__ + \"static/media/drop.9e04281b.svg\";","export default __webpack_public_path__ + \"static/media/fog.8152f8c1.svg\";","export default __webpack_public_path__ + \"static/media/hot.ab77ff3c.svg\";","export default __webpack_public_path__ + \"static/media/lightning.9ed941b6.svg\";","export default __webpack_public_path__ + \"static/media/moon.9534fede.svg\";","export default __webpack_public_path__ + \"static/media/night_raining.a08488f4.svg\";","export default __webpack_public_path__ + \"static/media/rain.3d82b4cb.svg\";","export default __webpack_public_path__ + \"static/media/raining_sun.7ee353d9.svg\";","export default __webpack_public_path__ + \"static/media/snow.212a62c8.svg\";","export default __webpack_public_path__ + \"static/media/snowflake.34a11c12.svg\";","export default __webpack_public_path__ + \"static/media/wind.f9f8f588.svg\";","import {\r\n  favoriteType,\r\n  ForecastType,\r\n  LocationType,\r\n  TodayForecastType,\r\n} from \"../types\";\r\nimport sunny from \"../icons/sunny.svg\";\r\nimport cloud_foggy from \"../icons/cloud_foggy.svg\";\r\nimport cloud_snowflake from \"../icons/cloud_snowflake.svg\";\r\nimport cloud from \"../icons/cloud.svg\";\r\nimport cloudy_lightning from \"../icons/cloudy_lightning.svg\";\r\nimport cloudy_moon from \"../icons/cloudy_moon.svg\";\r\nimport cloudy_sunny from \"../icons/cloudy_sunny.svg\";\r\nimport drop from \"../icons/drop.svg\";\r\nimport fog from \"../icons/fog.svg\";\r\nimport hot from \"../icons/hot.svg\";\r\nimport lightning from \"../icons/lightning.svg\";\r\nimport moon from \"../icons/moon.svg\";\r\nimport night_raining from \"../icons/night_raining.svg\";\r\nimport rain from \"../icons/rain.svg\";\r\nimport raining_sun from \"../icons/raining_sun.svg\";\r\nimport snow from \"../icons/snow.svg\";\r\nimport snowflake from \"../icons/snowflake.svg\";\r\nimport wind from \"../icons/wind.svg\";\r\n\r\nexport const options: LocationType[] = [\r\n  { key: \"328328\", city: \"London\", country: \"United Kingdom\" },\r\n  { key: \"294927\", city: \"Vladivostok\", country: \"Russia\" },\r\n  { key: \"215849\", city: \"Ramat Gan\", country: \"Israel\" },\r\n];\r\n\r\nexport const fiveDaysForecast: ForecastType[] = [\r\n  {\r\n    date: \"8 Sep\",\r\n    weekDay: \"Wednesday\",\r\n    icon: 4,\r\n    maxTemp: { c: 27, f: 80 },\r\n    minTemp: { c: 17, f: 62 },\r\n    weatherText: \"Intermittent clouds\",\r\n  },\r\n  {\r\n    date: \"9 Sep\",\r\n    weekDay: \"Thursday\",\r\n    icon: 11,\r\n    maxTemp: { c: 22, f: 71 },\r\n    minTemp: { c: 16, f: 60 },\r\n    weatherText: \"Foggy\",\r\n  },\r\n  {\r\n    date: \"10 Sep\",\r\n    weekDay: \"Friday\",\r\n    icon: 3,\r\n    maxTemp: { c: 21, f: 69 },\r\n    minTemp: { c: 15, f: 59 },\r\n    weatherText: \"Intermittent clouds\",\r\n  },\r\n  {\r\n    date: \"11 Sep\",\r\n    weekDay: \"Saturday\",\r\n    icon: 7,\r\n    maxTemp: { c: 21, f: 69 },\r\n    minTemp: { c: 13, f: 55 },\r\n    weatherText: \"Cloudy\",\r\n  },\r\n];\r\n\r\nexport const todayForecast: TodayForecastType = {\r\n  weekDay: \"Tuesday\",\r\n  date: \" 7 Sep\",\r\n  icon: 1,\r\n  weatherText: \"Sunny\",\r\n  currentTemp: { c: 25, f: 77 },\r\n  maxTemp: { c: 28, f: 82 },\r\n  minTemp: { c: 16, f: 60 },\r\n  humidity: 57,\r\n  wind: { m: \"3.2 km/h\", i: \"5.4 mi/h\" },\r\n};\r\n\r\nexport const favoriteLocations: favoriteType[] = [\r\n  {\r\n    location: { key: \"328328\", city: \"London\", country: \"United Kingdom\" },\r\n    icon: 18,\r\n    currentTemp: { c: 20, f: 67 },\r\n    maxTemp: { c: 21, f: 69 },\r\n    minTemp: { c: 13, f: 55 },\r\n    weatherText: \"Rainy\",\r\n  },\r\n  {\r\n    location: { key: \"294927\", city: \"Vladivostok\", country: \"Russia\" },\r\n    icon: 11,\r\n    currentTemp: { c: 21, f: 69 },\r\n    maxTemp: { c: 21, f: 69 },\r\n    minTemp: { c: 19, f: 62 },\r\n    weatherText: \"Foggy\",\r\n  },\r\n  {\r\n    location: { key: \"215849\", city: \"Ramat Gan\", country: \"Israel\" },\r\n    icon: 1,\r\n    currentTemp: { c: 29, f: 84 },\r\n    maxTemp: { c: 31, f: 93 },\r\n    minTemp: { c: 23, f: 72 },\r\n    weatherText: \"Sunny\",\r\n  },\r\n  {\r\n    location: { key: \"48989\", city: \"Winnipeg\", country: \"Canada\" },\r\n    icon: 33,\r\n    currentTemp: { c: 20, f: 69 },\r\n    maxTemp: { c: 29, f: 84 },\r\n    minTemp: { c: 13, f: 56 },\r\n    weatherText: \"Clear\",\r\n  },\r\n];\r\n\r\nexport const icons = {\r\n  1: sunny,\r\n  2: sunny,\r\n  3: cloudy_sunny,\r\n  4: cloudy_sunny,\r\n  5: cloudy_sunny,\r\n  6: cloud,\r\n  7: cloud,\r\n  8: cloud_foggy,\r\n  11: fog,\r\n  12: drop,\r\n  13: raining_sun,\r\n  14: raining_sun,\r\n  15: cloudy_lightning,\r\n  16: lightning,\r\n  17: lightning,\r\n  18: rain,\r\n  19: snow,\r\n  20: raining_sun,\r\n  21: raining_sun,\r\n  22: cloud_snowflake,\r\n  23: cloud_snowflake,\r\n  24: snowflake,\r\n  25: snow,\r\n  26: rain,\r\n  29: snow,\r\n  30: hot,\r\n  31: snowflake,\r\n  32: wind,\r\n  33: moon,\r\n  34: moon,\r\n  35: cloudy_moon,\r\n  36: cloudy_moon,\r\n  37: fog,\r\n  38: cloudy_moon,\r\n  39: night_raining,\r\n  40: night_raining,\r\n  41: lightning,\r\n  42: cloudy_lightning,\r\n  43: snow,\r\n  44: cloud_snowflake,\r\n};\r\n","import React, { FC, CSSProperties } from \"react\";\r\nimport styles from \"./skeleton.module.scss\";\r\n\r\ntype PropsType = {\r\n  parameters?: CSSProperties;\r\n};\r\n\r\nexport const Skeleton: FC<PropsType> = ({ parameters }) => {\r\n  return (\r\n    <div\r\n      className={styles.skeleton}\r\n      style={parameters || { height: \"45px\" }}\r\n    ></div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./favoriteSkeleton.module.scss\";\r\nimport { Skeleton } from \"../skeleton\";\r\n\r\nexport const FavoriteSkeleton = () => {\r\n  return (\r\n    <section className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.main}>\r\n          <div className={styles.today}>\r\n            <Skeleton parameters={{ width: \"153px\", height: \"45px\" }} />\r\n            <Skeleton\r\n              parameters={{\r\n                width: \"60px\",\r\n                height: \"35px\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={styles.icon}>\r\n            <Skeleton\r\n              parameters={{\r\n                borderRadius: \"50%\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={styles.temperature}>\r\n            <Skeleton\r\n              parameters={{\r\n                width: \"36px\",\r\n                height: \"40px\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            />\r\n            <Skeleton\r\n              parameters={{\r\n                width: \"110px\",\r\n                height: \"40px\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            />\r\n          </div>\r\n          <Skeleton\r\n            parameters={{ width: \"120px\", height: \"40px\", marginTop: \"10px\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { useSelector } from \"../../hooks\";\r\nimport styles from \"./todayForecast.module.scss\";\r\nimport { icons } from \"../../utils/data\";\r\nimport { Skeleton } from \"../skeleton\";\r\n\r\ntype PropType = {\r\n  isMetric: boolean;\r\n};\r\n\r\nexport const TodayForecast: FC<PropType> = ({ isMetric }) => {\r\n  const todayForecast = useSelector(\r\n    (store) => store.MainReducer.currentForecast\r\n  );\r\n\r\n  const loading = useSelector(\r\n    (store) => store.MainReducer.currentForecastRequest\r\n  );\r\n\r\n  const failLoading = useSelector(\r\n    (store) => store.MainReducer.currentForecastFailure\r\n  );\r\n\r\n  const currentIcon = icons[todayForecast?.icon || \"30\"];\r\n  const minMaxTemp = isMetric\r\n    ? todayForecast?.maxTemp.c + \"°C / \" + todayForecast?.minTemp.c + \"°C\"\r\n    : todayForecast?.maxTemp.f + \"°F / \" + todayForecast?.minTemp.f + \"°F\";\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.main}>\r\n          <div className={styles.first_column}>\r\n            <div className={styles.icon}>\r\n              <Skeleton\r\n                parameters={{\r\n                  width: \"130px\",\r\n                  height: \"130px\",\r\n                  borderRadius: \"50%\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={styles.temperature}>\r\n              <Skeleton parameters={{ height: \"30px\", maxWidth: \"200px\" }} />\r\n              <Skeleton\r\n                parameters={{\r\n                  height: \"30px\",\r\n                  width: \"200px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={styles.second_column}>\r\n            <div className={styles.day_info}>\r\n              <div className={styles.date}>\r\n                <Skeleton parameters={{ height: \"30px\", width: \"220px\" }} />\r\n              </div>\r\n              <span className={styles.weather}>\r\n                <Skeleton parameters={{ height: \"30px\", width: \"220px\" }} />\r\n              </span>\r\n            </div>\r\n            <div className={styles.parameters}>\r\n              <span>\r\n                <Skeleton parameters={{ height: \"30px\", width: \"200px\" }} />\r\n              </span>\r\n              <span className={styles.wind}>\r\n                <Skeleton parameters={{ height: \"30px\", width: \"200px\" }} />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (failLoading) {\r\n    return (\r\n      <div className={styles.box}>\r\n        <div className={styles.error}>\r\n          <div>The allowed number of requests has been exceeded.</div>\r\n          <div> Try again tomorrow.</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.main}>\r\n        <div className={styles.first_column}>\r\n          <div className={styles.icon}>\r\n            <img src={currentIcon} alt=\"weather icon\" />\r\n          </div>\r\n          <div className={styles.temperature}>\r\n            <span className={styles.current_temp}>\r\n              {isMetric\r\n                ? todayForecast?.currentTemp.c + \"°C\"\r\n                : todayForecast?.currentTemp.f + \"°F\"}\r\n            </span>\r\n            <span>{minMaxTemp}</span>\r\n          </div>\r\n        </div>\r\n        <div className={styles.second_column}>\r\n          <div className={styles.day_info}>\r\n            <div className={styles.date}>\r\n              <span>{todayForecast?.weekDay} </span>\r\n              <span className={styles.day}> {todayForecast?.date}</span>\r\n            </div>\r\n            <span className={styles.weather}>{todayForecast?.weatherText}</span>\r\n          </div>\r\n          <div className={styles.parameters}>\r\n            <span>\r\n              {\" \"}\r\n              <span className={styles.text}>Humidity: </span>\r\n              {todayForecast?.humidity}%\r\n            </span>\r\n            <span className={styles.wind}>\r\n              <span className={styles.text}>Wind: </span>\r\n              {isMetric ? todayForecast?.wind.m : todayForecast?.wind.i}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { useSelector } from \"../../hooks\";\r\nimport { ForecastType } from \"../../types\";\r\nimport { icons } from \"../../utils/data\";\r\nimport { Skeleton } from \"../skeleton\";\r\nimport styles from \"./dailyForecast.module.scss\";\r\n\r\ntype PropType = {\r\n  weather: ForecastType;\r\n  isMetric: boolean;\r\n};\r\n\r\nexport const DailyForecast: FC<PropType> = ({ weather, isMetric }) => {\r\n  const dayLoading = useSelector(\r\n    (store) => store.MainReducer.currentForecastRequest\r\n  );\r\n  const weekLoading = useSelector(\r\n    (store) => store.MainReducer.weekForecastRequest\r\n  );\r\n  const failLoading = useSelector(\r\n    (store) => store.MainReducer.currentForecastFailure\r\n  );\r\n\r\n  const { date, weekDay, icon, maxTemp, minTemp, weatherText } = weather;\r\n\r\n  const currentIcon = icons[icon];\r\n  const minMaxTemp = isMetric\r\n    ? maxTemp.c + \"°C / \" + minTemp.c + \"°C\"\r\n    : maxTemp.f + \"°F / \" + minTemp.f + \"°F\";\r\n\r\n  if (dayLoading || weekLoading) {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.main}>\r\n          <div className={styles.today}>\r\n            <Skeleton parameters={{ width: \"150px\", height: \"45px\" }} />\r\n            <Skeleton\r\n              parameters={{ width: \"90px\", height: \"35px\", marginTop: \"10px\" }}\r\n            />\r\n          </div>\r\n          <div className={styles.icon}>\r\n            <Skeleton\r\n              parameters={{\r\n                width: \"72px\",\r\n                height: \"72px\",\r\n                borderRadius: \"50%\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            />\r\n          </div>\r\n          <Skeleton parameters={{ width: \"130px\", height: \"45px\" }} />\r\n          <Skeleton\r\n            parameters={{ width: \"90px\", height: \"30px\", marginTop: \"10px\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (failLoading) {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.main}>\r\n          <div className={styles.today}>\r\n            <div className={styles.date}>\r\n              <div>The allowed number of </div>\r\n              <div>requests has been exceeded.</div>\r\n              <div> Try again tomorrow.</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.main}>\r\n        <div className={styles.today}>\r\n          <span className={styles.day}>{weekDay}</span>\r\n          <span className={styles.date}>{date}</span>\r\n        </div>\r\n        <div className={styles.icon}>\r\n          <img src={currentIcon} alt=\"weather icon\" />\r\n        </div>\r\n        <div className={styles.temperature}>{minMaxTemp}</div>\r\n        <div className={styles.weather}>{weatherText}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/blue_search.17427486.svg\";","export const celsiusToFahrenheit = (c: number) => {\r\n  return c * 1.8 + 32;\r\n};\r\n","export const API_KEY = process.env.REACT_APP_API_KEY;\r\nexport const BASE_URL = \"https://dataservice.accuweather.com\";\r\nexport const AUTOCOMPLETE_SEARCH_URL = \"/locations/v1/cities/autocomplete\";\r\nexport const FIVE_DAYS_URL = \"/forecasts/v1/daily/5day\";\r\nexport const CURRENT_CONDITIONS_URL = \"/currentconditions/v1\";\r\n\r\nconst handleRequest = (res: Response) => {\r\n  return res.ok\r\n    ? res.json()\r\n    : res.json().then((error) => Promise.reject(error));\r\n};\r\n\r\nexport const getCurrentWeather = async (key: string) => {\r\n  const res = await fetch(\r\n    `${BASE_URL}${CURRENT_CONDITIONS_URL}/${key}?apikey=${API_KEY}&details=true`\r\n  );\r\n  return await handleRequest(res);\r\n};\r\n\r\nexport const getFiveDaysWeather = async (key: string) => {\r\n  const res = await fetch(\r\n    `${BASE_URL}${FIVE_DAYS_URL}/${key}?apikey=${API_KEY}&metric=true`\r\n  );\r\n  return await handleRequest(res);\r\n};\r\n\r\nexport const getSearchList = async (location: string) => {\r\n  const res = await fetch(\r\n    `${BASE_URL}${AUTOCOMPLETE_SEARCH_URL}?apikey=${API_KEY}&q=${location}`\r\n  );\r\n  return await handleRequest(res);\r\n};\r\n","import {\r\n  AppDispatch,\r\n  AppThunk,\r\n  ForecastType,\r\n  TodayForecastType,\r\n  DailyResponseType,\r\n  LocationType,\r\n} from \"../../types\";\r\nimport { celsiusToFahrenheit } from \"../../utils\";\r\nimport { getCurrentWeather, getFiveDaysWeather } from \"../../utils/api\";\r\n\r\nexport const GET_CURRENT_FORECAST_REQUEST =\r\n  \"GET_CURRENT_FORECAST_REQUEST\" as const;\r\nexport const GET_CURRENT_FORECAST_SUCCESS =\r\n  \"GET_CURRENT_FORECAST_SUCCESS\" as const;\r\nexport const GET_CURRENT_FORECAST_FAILURE =\r\n  \"GET_CURRENT_FORECAST_FAILURE\" as const;\r\n\r\nexport const GET_WEEK_FORECAST_REQUEST = \"GET_WEEK_FORECAST_REQUEST\" as const;\r\nexport const GET_WEEK_FORECAST_SUCCESS = \"GET_WEEK_FORECAST_SUCCESS\" as const;\r\nexport const GET_WEEK_FORECAST_FAILURE = \"GET_WEEK_FORECAST_FAILURE\" as const;\r\n\r\nexport const SET_LOCATION = \"SET_LOCATION\" as const;\r\n\r\nexport interface IGetCurrentForecastRequest {\r\n  readonly type: typeof GET_CURRENT_FORECAST_REQUEST;\r\n}\r\n\r\nexport interface IGetCurrentForecastSuccess {\r\n  readonly type: typeof GET_CURRENT_FORECAST_SUCCESS;\r\n  payload: TodayForecastType;\r\n}\r\n\r\nexport interface IGetCurrentForecastFailure {\r\n  readonly type: typeof GET_CURRENT_FORECAST_FAILURE;\r\n}\r\n\r\nexport interface IGetWeekForecastRequest {\r\n  readonly type: typeof GET_WEEK_FORECAST_REQUEST;\r\n}\r\n\r\nexport interface IGetWeekForecastSuccess {\r\n  readonly type: typeof GET_WEEK_FORECAST_SUCCESS;\r\n  payload: ForecastType[];\r\n}\r\n\r\nexport interface IGetWeekForecastFailure {\r\n  readonly type: typeof GET_WEEK_FORECAST_FAILURE;\r\n}\r\n\r\nexport interface ISetLocationKey {\r\n  readonly type: typeof SET_LOCATION;\r\n  payload: LocationType;\r\n}\r\n\r\nexport type MainActions =\r\n  | IGetCurrentForecastRequest\r\n  | IGetCurrentForecastSuccess\r\n  | IGetCurrentForecastFailure\r\n  | IGetWeekForecastRequest\r\n  | IGetWeekForecastSuccess\r\n  | IGetWeekForecastFailure\r\n  | ISetLocationKey;\r\n\r\nexport const getCurrentForecast: AppThunk = (locationKey: string) => {\r\n  return async function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_CURRENT_FORECAST_REQUEST,\r\n    });\r\n\r\n    try {\r\n      const res = await getCurrentWeather(locationKey);\r\n\r\n      if (res) {\r\n        const data = res[0];\r\n        const currentDay = new Date(data?.LocalObservationDateTime);\r\n        const currentTemp = {\r\n          c: Math.round(data?.Temperature?.Metric?.Value),\r\n          f: Math.round(data?.Temperature?.Imperial?.Value),\r\n        };\r\n        const maxTemp = {\r\n          c: Math.round(\r\n            data?.TemperatureSummary?.Past24HourRange?.Maximum?.Metric?.Value\r\n          ),\r\n          f: Math.round(\r\n            data?.TemperatureSummary?.Past24HourRange?.Maximum?.Imperial?.Value\r\n          ),\r\n        };\r\n        const minTemp = {\r\n          c: Math.round(\r\n            data?.TemperatureSummary?.Past24HourRange?.Minimum?.Metric?.Value\r\n          ),\r\n          f: Math.round(\r\n            data?.TemperatureSummary?.Past24HourRange?.Minimum?.Imperial?.Value\r\n          ),\r\n        };\r\n        const wind = {\r\n          m: String(data?.Wind?.Speed?.Metric?.Value) + \" km/h\",\r\n          i: String(data?.Wind?.Speed?.Imperial?.Value) + \" mi/h\",\r\n        };\r\n\r\n        dispatch({\r\n          type: GET_CURRENT_FORECAST_SUCCESS,\r\n          payload: {\r\n            weekDay: currentDay.toLocaleString(\"en-US\", { weekday: \"long\" }),\r\n            date: currentDay.toLocaleString(\"en-US\", {\r\n              day: \"numeric\",\r\n              month: \"short\",\r\n            }),\r\n            icon: data?.WeatherIcon,\r\n            weatherText: data?.WeatherText,\r\n            currentTemp,\r\n            maxTemp,\r\n            minTemp,\r\n            humidity: data?.RelativeHumidity,\r\n            wind,\r\n          },\r\n        });\r\n      } else {\r\n        throw new Error(\"Response status is not OK\");\r\n      }\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_CURRENT_FORECAST_FAILURE,\r\n      });\r\n      console.error(\"There is a problem with CURRENT FORECAST request\", error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getWeekForecast: AppThunk = (locationKey: string) => {\r\n  return async function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_WEEK_FORECAST_REQUEST,\r\n    });\r\n\r\n    try {\r\n      const res = await getFiveDaysWeather(locationKey);\r\n\r\n      const data = res.DailyForecasts;\r\n      data.shift();\r\n\r\n      const weekForecast = data.map((day: DailyResponseType) => {\r\n        const currentDay = new Date(day.Date);\r\n        const maxTemp = {\r\n          c: Math.round(day?.Temperature?.Maximum?.Value),\r\n          f: Math.round(celsiusToFahrenheit(day?.Temperature?.Maximum?.Value)),\r\n        };\r\n        const minTemp = {\r\n          c: Math.round(day?.Temperature?.Minimum?.Value),\r\n          f: Math.round(celsiusToFahrenheit(day?.Temperature?.Minimum?.Value)),\r\n        };\r\n        return {\r\n          date: currentDay.toLocaleString(\"en-US\", {\r\n            day: \"numeric\",\r\n            month: \"short\",\r\n          }),\r\n          weekDay: currentDay.toLocaleString(\"en-US\", { weekday: \"long\" }),\r\n          icon: day?.Day?.Icon,\r\n          maxTemp,\r\n          minTemp,\r\n          weatherText: day?.Day?.IconPhrase,\r\n        };\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_WEEK_FORECAST_SUCCESS,\r\n        payload: weekForecast,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_WEEK_FORECAST_FAILURE,\r\n      });\r\n      console.error(\"There is a problem with WEEK FORECAST request\", error);\r\n    }\r\n  };\r\n};\r\n","import {\r\n  AppDispatch,\r\n  AppThunk,\r\n  LocationType,\r\n  SearchResponseType,\r\n} from \"../../types\";\r\nimport { getSearchList } from \"../../utils/api\";\r\n\r\nexport const GET_OPTIONS_LIST_REQUEST = \"GET_OPTIONS_LIST_REQUEST\" as const;\r\nexport const GET_OPTIONS_LIST_SUCCESS = \"GET_OPTIONS_LIST_SUCCESS\" as const;\r\nexport const GET_OPTIONS_LIST_FAILURE = \"GET_OPTIONS_LIST_FAILURE\" as const;\r\nexport const DELETE_OPTIONS_LIST = \"DELETE_OPTIONS_LIST\" as const;\r\n\r\nexport interface IGetOptionsListRequest {\r\n  readonly type: typeof GET_OPTIONS_LIST_REQUEST;\r\n}\r\n\r\nexport interface IGetOptionsListSuccess {\r\n  readonly type: typeof GET_OPTIONS_LIST_SUCCESS;\r\n  payload: LocationType[];\r\n}\r\n\r\nexport interface IGetOptionsListFailure {\r\n  readonly type: typeof GET_OPTIONS_LIST_FAILURE;\r\n}\r\n\r\nexport interface IDeleteOptionsList {\r\n  readonly type: typeof DELETE_OPTIONS_LIST;\r\n}\r\n\r\nexport type SearchActions =\r\n  | IGetOptionsListRequest\r\n  | IGetOptionsListSuccess\r\n  | IGetOptionsListFailure\r\n  | IDeleteOptionsList;\r\n\r\nexport const getOptionsList: AppThunk = (location: string) => {\r\n  return async function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_OPTIONS_LIST_REQUEST,\r\n    });\r\n\r\n    try {\r\n      const res = await getSearchList(location);\r\n\r\n      const options = res.map((option: SearchResponseType) => {\r\n        return {\r\n          key: option.Key,\r\n          city: option.LocalizedName,\r\n          country: option.Country?.LocalizedName,\r\n        };\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_OPTIONS_LIST_SUCCESS,\r\n        payload: options,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_OPTIONS_LIST_FAILURE,\r\n      });\r\n      console.error(\"There is a problem with OPTIONS LIST request\", error);\r\n    }\r\n  };\r\n};\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport styles from \"./search.module.scss\";\r\nimport blueSearch from \"../../icons/blue_search.svg\";\r\nimport { LocationType } from \"../../types\";\r\nimport { useDebounce, useDispatch, useSelector } from \"../../hooks\";\r\nimport { SET_LOCATION } from \"../../redux/actions/mainActions\";\r\nimport {\r\n  DELETE_OPTIONS_LIST,\r\n  getOptionsList,\r\n} from \"../../redux/actions/searchActions\";\r\n\r\ntype PropsType = {\r\n  options: LocationType[] | null;\r\n};\r\n\r\nexport const Search: FC<PropsType> = ({ options }) => {\r\n  const currentLocationName = useSelector(\r\n    (store) => store.MainReducer.currentLocation.city\r\n  );\r\n\r\n  const [currentLocation, setLocation] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n  const [locationName, setName] = useState(currentLocationName || \"London\");\r\n  const searchValue = useDebounce(currentLocation);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (searchValue !== \"\") {\r\n      dispatch(getOptionsList(searchValue));\r\n    }\r\n  }, [searchValue, dispatch]);\r\n\r\n  const HandelClick = (location: LocationType) => {\r\n    setName(location.city);\r\n    setLocation(\"\");\r\n    setDisplay(false);\r\n\r\n    dispatch({\r\n      type: SET_LOCATION,\r\n      payload: location,\r\n    });\r\n    dispatch({\r\n      type: DELETE_OPTIONS_LIST,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.main}>\r\n        <input\r\n          type=\"text\"\r\n          value={currentLocation}\r\n          onClick={() => setDisplay(!display)}\r\n          onChange={(e) => setLocation(e.target.value)}\r\n        />\r\n        <img src={blueSearch} alt=\"search icon\" />\r\n        {display && (\r\n          <div className={styles.dropdown}>\r\n            {options &&\r\n              options.map((location: LocationType, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={styles.option}\r\n                  onClick={() => HandelClick(location)}\r\n                >\r\n                  <span className={styles.city}>{location.city}</span>\r\n                  <span className={styles.country}>{location.country}</span>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={styles.current_location}>\r\n        <span>{locationName}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { AppDispatch, AppThunk, favoriteType, LocationType } from \"../../types\";\r\nimport { getCurrentWeather } from \"../../utils/api\";\r\n\r\nexport const GET_FAVORITES_LIST_REQUEST = \"GET_FAVORITES_LIST_REQUEST\" as const;\r\nexport const GET_FAVORITES_LIST_SUCCESS = \"GET_FAVORITES_LIST_SUCCESS\" as const;\r\nexport const GET_FAVORITES_LIST_FAILURE = \"GET_FAVORITES_LIST_FAILURE\" as const;\r\n\r\nexport const CLEAR_FAVORITES_LIST = \"CLEAR_FAVORITES_LIST\" as const;\r\n\r\nexport const ADD_OR_REMOVE_FAVORITES = \"ADD_OR_REMOVE_FAVORITES\" as const;\r\n\r\nexport interface IGetFavoritesListRequest {\r\n  readonly type: typeof GET_FAVORITES_LIST_REQUEST;\r\n}\r\n\r\nexport interface IGetFavoritesListSuccess {\r\n  readonly type: typeof GET_FAVORITES_LIST_SUCCESS;\r\n  payload: favoriteType;\r\n}\r\n\r\nexport interface IGetFavoritesListFailure {\r\n  readonly type: typeof GET_FAVORITES_LIST_FAILURE;\r\n}\r\n\r\nexport interface IClearFavoritesList {\r\n  readonly type: typeof CLEAR_FAVORITES_LIST;\r\n}\r\n\r\nexport interface IAddOrRemoveFavorites {\r\n  readonly type: typeof ADD_OR_REMOVE_FAVORITES;\r\n  payload: LocationType[];\r\n}\r\n\r\nexport type FavoritesActions =\r\n  | IGetFavoritesListRequest\r\n  | IGetFavoritesListSuccess\r\n  | IGetFavoritesListFailure\r\n  | IClearFavoritesList\r\n  | IAddOrRemoveFavorites;\r\n\r\nexport const getFavoriteForecast: AppThunk = (location: LocationType) => {\r\n  return async function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_FAVORITES_LIST_REQUEST,\r\n    });\r\n\r\n    try {\r\n      const res = await getCurrentWeather(location.key);\r\n\r\n      const data = res[0];\r\n\r\n      const currentTemp = {\r\n        c: Math.round(data?.Temperature?.Metric?.Value),\r\n        f: Math.round(data?.Temperature?.Imperial?.Value),\r\n      };\r\n      const maxTemp = {\r\n        c: Math.round(\r\n          data?.TemperatureSummary?.Past24HourRange?.Maximum?.Metric?.Value\r\n        ),\r\n        f: Math.round(\r\n          data?.TemperatureSummary?.Past24HourRange?.Maximum?.Imperial?.Value\r\n        ),\r\n      };\r\n      const minTemp = {\r\n        c: Math.round(\r\n          data?.TemperatureSummary?.Past24HourRange?.Minimum?.Metric?.Value\r\n        ),\r\n        f: Math.round(\r\n          data?.TemperatureSummary?.Past24HourRange?.Minimum?.Imperial?.Value\r\n        ),\r\n      };\r\n\r\n      dispatch({\r\n        type: GET_FAVORITES_LIST_SUCCESS,\r\n        payload: {\r\n          location,\r\n          icon: data?.WeatherIcon,\r\n          currentTemp,\r\n          maxTemp,\r\n          minTemp,\r\n          weatherText: data?.WeatherText,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_FAVORITES_LIST_FAILURE,\r\n      });\r\n      console.error(\"There is a problem with FAVORITES LIST request\", error);\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useSelector,\r\n  useDispatch,\r\n  useStateWithLocalStorage,\r\n} from \"../../hooks\";\r\nimport styles from \"./star.module.scss\";\r\nimport star from \"../../icons/star.svg\";\r\nimport { ADD_OR_REMOVE_FAVORITES } from \"../../redux/actions/favoritesActions\";\r\n\r\nexport const Star = () => {\r\n  const dispatch = useDispatch();\r\n  const [isActive, setActive] = useState(false);\r\n  const [value, setValue] = useStateWithLocalStorage(\"favorites\");\r\n\r\n  const favorites = useSelector((store) => store.FavoritesReducer.favorites);\r\n  const currentLocation = useSelector(\r\n    (store) => store.MainReducer.currentLocation\r\n  );\r\n\r\n  const isFavorites = Boolean(\r\n    favorites.find((location) => {\r\n      return location.key === currentLocation.key;\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (favorites.length === 0 && value) {\r\n      dispatch({\r\n        type: ADD_OR_REMOVE_FAVORITES,\r\n        payload: JSON.parse(value),\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setActive(isFavorites);\r\n  }, [isFavorites]);\r\n\r\n  const handelClick = () => {\r\n    setActive((prevState) => !prevState);\r\n    if (!isActive) {\r\n      const result = [...favorites, currentLocation];\r\n\r\n      dispatch({\r\n        type: ADD_OR_REMOVE_FAVORITES,\r\n        payload: result,\r\n      });\r\n      setValue(JSON.stringify(result));\r\n    } else {\r\n      const result = favorites.filter(\r\n        (location) => location.key !== currentLocation.key\r\n      );\r\n\r\n      dispatch({\r\n        type: ADD_OR_REMOVE_FAVORITES,\r\n        payload: result,\r\n      });\r\n      setValue(JSON.stringify(result));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <img\r\n        src={star}\r\n        alt=\"full star img\"\r\n        onClick={handelClick}\r\n        className={`${styles.star} ${\r\n          isActive ? styles.full_star : styles.empty_star\r\n        }`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  useSelector,\r\n  useDispatch,\r\n  useStateWithLocalStorage,\r\n} from \"../../hooks\";\r\nimport { SET_MEASURE } from \"../../redux/actions/parametersActions\";\r\nimport styles from \"./measureButton.module.scss\";\r\n\r\nexport const MeasureButton = () => {\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useStateWithLocalStorage(\"measure\");\r\n\r\n  const measure = useSelector((store) => store.ParametersReducer.measure);\r\n  const isMetric = measure === \"metric\";\r\n\r\n  useEffect(() => {\r\n    if (value) {\r\n      dispatch({\r\n        type: SET_MEASURE,\r\n        payload: value,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const switcher = () => {\r\n    dispatch({\r\n      type: SET_MEASURE,\r\n      payload: isMetric ? \"imperial\" : \"metric\",\r\n    });\r\n    setValue(isMetric ? \"imperial\" : \"metric\");\r\n  };\r\n\r\n  const buttonText = isMetric ? \"F\" : \"C\";\r\n\r\n  return (\r\n    <div className={styles.button}>\r\n      <button onClick={switcher}>\r\n        <span>°</span> {buttonText}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../hooks\";\r\nimport { fiveDaysForecast } from \"../../utils/data\";\r\nimport { TodayForecast } from \"../../components/todayForecast\";\r\nimport styles from \"./mainPage.module.scss\";\r\nimport { ForecastType } from \"../../types\";\r\nimport { DailyForecast } from \"../../components/dailyForecast\";\r\nimport { Search } from \"../../components/search\";\r\nimport { Star } from \"../../components/star\";\r\nimport { MeasureButton } from \"../../components/measureButton\";\r\nimport {\r\n  getCurrentForecast,\r\n  getWeekForecast,\r\n} from \"../../redux/actions/mainActions\";\r\n\r\nexport const MainPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentLocation, weekForecast } = useSelector(\r\n    (store) => store.MainReducer\r\n  );\r\n  const measure = useSelector((store) => store.ParametersReducer.measure);\r\n  const options = useSelector((store) => store.SearchReducer.optionsList);\r\n\r\n  const isMetric = measure === \"metric\";\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentForecast(currentLocation.key));\r\n    dispatch(getWeekForecast(currentLocation.key));\r\n  }, [currentLocation, dispatch]);\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <div className={styles.circle}></div>\r\n      <div className={styles.back_circle}></div>\r\n      <div className={styles.main}>\r\n        <MeasureButton />\r\n        <div className={styles.content}>\r\n          <div className={styles.current_box}>\r\n            <div className={styles.search_box}>\r\n              <Star />\r\n              <Search options={options} />\r\n            </div>\r\n            <TodayForecast isMetric={isMetric} />\r\n          </div>\r\n          <div className={styles.week_box}>\r\n            {weekForecast\r\n              ? weekForecast.map((weather: ForecastType, index) => (\r\n                  <div key={index} className={styles.weather_block}>\r\n                    <DailyForecast weather={weather} isMetric={isMetric} />\r\n                  </div>\r\n                ))\r\n              : fiveDaysForecast.map((weather: ForecastType, index) => (\r\n                  <div key={index} className={styles.weather_block}>\r\n                    <DailyForecast weather={weather} isMetric={isMetric} />\r\n                  </div>\r\n                ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"../../hooks\";\r\nimport { ADD_OR_REMOVE_FAVORITES } from \"../../redux/actions/favoritesActions\";\r\nimport { SET_LOCATION } from \"../../redux/actions/mainActions\";\r\nimport { favoriteType } from \"../../types\";\r\nimport { icons } from \"../../utils/data\";\r\nimport styles from \"./favoriteLocation.module.scss\";\r\n\r\ntype PropsType = {\r\n  favorite: favoriteType;\r\n  isMetric: boolean;\r\n};\r\n\r\nexport const FavoriteLocation: FC<PropsType> = ({ favorite, isMetric }) => {\r\n  const dispatch = useDispatch();\r\n  const { favorites } = useSelector((store) => store.FavoritesReducer);\r\n\r\n  const { location, icon, currentTemp, maxTemp, minTemp, weatherText } =\r\n    favorite;\r\n\r\n  const currentIcon = icons[icon];\r\n  const minMaxTemp = isMetric\r\n    ? maxTemp.c + \"°C / \" + minTemp.c + \"°C\"\r\n    : maxTemp.f + \"°F / \" + minTemp.f + \"°F\";\r\n\r\n  const handleClick = () => {\r\n    dispatch({\r\n      type: SET_LOCATION,\r\n      payload: location,\r\n    });\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    const result = favorites.filter(\r\n      (favLocation) => favLocation.key !== location.key\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_OR_REMOVE_FAVORITES,\r\n      payload: result,\r\n    });\r\n\r\n    localStorage.setItem(\"favorites\", JSON.stringify(result));\r\n  };\r\n\r\n  return (\r\n    <section className={styles.wrapper}>\r\n      <Link to=\"/simple-weather-site\">\r\n        <div className={styles.container} onClick={handleClick}>\r\n          <div className={styles.main}>\r\n            <div className={styles.today}>\r\n              <span className={styles.city}>{location.city}</span>\r\n              <span className={styles.country}>{location.country}</span>\r\n            </div>\r\n            <div className={styles.icon}>\r\n              <img src={currentIcon} alt=\"weather icon\" />\r\n            </div>\r\n            <div className={styles.temperature}>\r\n              <div className={styles.current}>\r\n                {isMetric ? currentTemp.c + \"°C\" : currentTemp.f + \"°F\"}\r\n              </div>\r\n              <div>{minMaxTemp}</div>\r\n            </div>\r\n            <div className={styles.weather}>{weatherText}</div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <button className={styles.delete_btn} onClick={handleDeleteClick}>\r\n        X\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport styles from \"./favorites.module.scss\";\r\nimport { useSelector, useDispatch } from \"../../hooks\";\r\nimport { MeasureButton } from \"../../components/measureButton\";\r\nimport { favoriteType } from \"../../types\";\r\nimport { FavoriteLocation } from \"../../components/favoriteLocation\";\r\nimport { FavoriteSkeleton } from \"../../components/skeleton\";\r\nimport {\r\n  ADD_OR_REMOVE_FAVORITES,\r\n  CLEAR_FAVORITES_LIST,\r\n  getFavoriteForecast,\r\n} from \"../../redux/actions/favoritesActions\";\r\n\r\nexport const Favorites = () => {\r\n  const dispatch = useDispatch();\r\n  const measure = useSelector((store) => store.ParametersReducer.measure);\r\n  const isMetric = measure === \"metric\";\r\n\r\n  const { favoritesList, favorites } = useSelector(\r\n    (store) => store.FavoritesReducer\r\n  );\r\n  const favoritesFromStorage = localStorage.getItem(\"favorites\");\r\n\r\n  const isLoading = favorites.length !== favoritesList.length;\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: CLEAR_FAVORITES_LIST,\r\n    });\r\n\r\n    if (favorites.length === 0 && favoritesFromStorage) {\r\n      dispatch({\r\n        type: ADD_OR_REMOVE_FAVORITES,\r\n        payload: JSON.parse(favoritesFromStorage),\r\n      });\r\n    }\r\n\r\n    favorites.map((location) => {\r\n      dispatch(getFavoriteForecast(location));\r\n    });\r\n  }, [favorites]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.main}>\r\n        <MeasureButton />\r\n        <div className={styles.title}>- Favorites -</div>\r\n        <div className={styles.favorites}>\r\n          {isLoading\r\n            ? favorites.map((item, index) => (\r\n                <div className={styles.favorite} key={index}>\r\n                  <FavoriteSkeleton />\r\n                </div>\r\n              ))\r\n            : favoritesList.map((location, index) => (\r\n                <div className={styles.favorite} key={index}>\r\n                  <FavoriteLocation favorite={location} isMetric={isMetric} />\r\n                </div>\r\n              ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./pageNotFound.module.scss\";\r\n\r\nexport const PageNotFound = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.number}>4</div>\r\n      <div className={styles.big_circle}>\r\n        <div className={styles.small_circle}>\r\n          <div className={styles.info}>\r\n            <div className={styles.not_found}>\r\n              page <span>not</span> found\r\n            </div>\r\n            <Link to=\"/simple-weather-site\">\r\n              <div className={styles.button}>To main page</div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.number}>4</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { useSelector } from \"./hooks\";\nimport { Header } from \"./components/header\";\nimport { MainPage, Favorites, PageNotFound } from \"./pages\";\n\nfunction App() {\n  const theme = useSelector((store) => store.ParametersReducer.theme);\n  const isDark = theme === \"dark\";\n\n  const currentTheme = isDark ? \"theme-dark\" : \"theme-light\";\n\n  return (\n    <div className={`color ${currentTheme}`}>\n      <Header />\n      <Switch>\n        <Route path=\"/simple-weather-site\" exact={true} component={MainPage} />\n        <Route path=\"/favorites\" exact={true} component={Favorites} />\n        <Route path=\"/\" component={PageNotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ForecastType, LocationType, TodayForecastType } from \"../../types\";\r\nimport {\r\n  GET_CURRENT_FORECAST_FAILURE,\r\n  GET_CURRENT_FORECAST_REQUEST,\r\n  GET_CURRENT_FORECAST_SUCCESS,\r\n  GET_WEEK_FORECAST_FAILURE,\r\n  GET_WEEK_FORECAST_REQUEST,\r\n  GET_WEEK_FORECAST_SUCCESS,\r\n  MainActions,\r\n  SET_LOCATION,\r\n} from \"../actions/mainActions\";\r\n\r\ntype MainState = {\r\n  currentLocation: LocationType;\r\n  currentForecast: TodayForecastType | null;\r\n  currentForecastRequest: boolean;\r\n  currentForecastFailure: boolean;\r\n  weekForecast: ForecastType[] | null;\r\n  weekForecastRequest: boolean;\r\n  weekForecastFailure: boolean;\r\n};\r\n\r\nconst initialState: MainState = {\r\n  currentLocation: { key: \"328328\", city: \"London\", country: \"United Kingdom\" },\r\n\r\n  currentForecast: null,\r\n  currentForecastRequest: false,\r\n  currentForecastFailure: false,\r\n\r\n  weekForecast: null,\r\n  weekForecastRequest: false,\r\n  weekForecastFailure: false,\r\n};\r\n\r\nexport const MainReducer = (\r\n  state = initialState,\r\n  action: MainActions\r\n): MainState => {\r\n  switch (action.type) {\r\n    case GET_CURRENT_FORECAST_REQUEST:\r\n      return {\r\n        ...state,\r\n        currentForecastRequest: true,\r\n      };\r\n    case GET_CURRENT_FORECAST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentForecastRequest: false,\r\n        currentForecast: action.payload,\r\n      };\r\n    case GET_CURRENT_FORECAST_FAILURE:\r\n      return {\r\n        ...state,\r\n        currentForecastRequest: false,\r\n        currentForecastFailure: true,\r\n      };\r\n    case GET_WEEK_FORECAST_REQUEST:\r\n      return {\r\n        ...state,\r\n        weekForecastRequest: true,\r\n      };\r\n    case GET_WEEK_FORECAST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        weekForecast: action.payload,\r\n        weekForecastRequest: false,\r\n      };\r\n    case GET_WEEK_FORECAST_FAILURE:\r\n      return {\r\n        ...state,\r\n        weekForecastRequest: false,\r\n        weekForecastFailure: true,\r\n      };\r\n    case SET_LOCATION:\r\n      return {\r\n        ...state,\r\n        currentLocation: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { favoriteType, LocationType } from \"../../types\";\r\nimport {\r\n  ADD_OR_REMOVE_FAVORITES,\r\n  CLEAR_FAVORITES_LIST,\r\n  FavoritesActions,\r\n  GET_FAVORITES_LIST_FAILURE,\r\n  GET_FAVORITES_LIST_REQUEST,\r\n  GET_FAVORITES_LIST_SUCCESS,\r\n} from \"../actions/favoritesActions\";\r\n\r\ntype FavoritesState = {\r\n  favorites: LocationType[] | [];\r\n  favoritesList: favoriteType[] | [];\r\n  favoritesListRequest: boolean;\r\n  favoritesListFailure: boolean;\r\n};\r\n\r\nconst initialState: FavoritesState = {\r\n  favorites: [],\r\n  favoritesList: [],\r\n  favoritesListRequest: false,\r\n  favoritesListFailure: false,\r\n};\r\n\r\nexport const FavoritesReducer = (\r\n  state = initialState,\r\n  action: FavoritesActions\r\n): FavoritesState => {\r\n  switch (action.type) {\r\n    case GET_FAVORITES_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        favoritesListRequest: true,\r\n      };\r\n    case GET_FAVORITES_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        favoritesListRequest: false,\r\n        favoritesList: [...state.favoritesList, action.payload],\r\n      };\r\n    case GET_FAVORITES_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        favoritesListRequest: false,\r\n        favoritesListFailure: true,\r\n      };\r\n    case CLEAR_FAVORITES_LIST:\r\n      return {\r\n        ...state,\r\n        favoritesList: [],\r\n      };\r\n    case ADD_OR_REMOVE_FAVORITES:\r\n      return {\r\n        ...state,\r\n        favorites: action.payload,\r\n        favoritesList: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ParametersActions,\r\n  SET_MEASURE,\r\n  SET_THEME,\r\n} from \"../actions/parametersActions\";\r\n\r\ntype ParametersState = {\r\n  theme: \"dark\" | \"light\";\r\n  measure: \"metric\" | \"imperial\";\r\n};\r\n\r\nconst initialState: ParametersState = {\r\n  theme: \"light\",\r\n  measure: \"metric\",\r\n};\r\n\r\nexport const ParametersReducer = (\r\n  state = initialState,\r\n  action: ParametersActions\r\n): ParametersState => {\r\n  switch (action.type) {\r\n    case SET_THEME:\r\n      return {\r\n        ...state,\r\n        theme: action.payload,\r\n      };\r\n    case SET_MEASURE:\r\n      return {\r\n        ...state,\r\n        measure: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { LocationType } from \"../../types\";\r\nimport {\r\n  DELETE_OPTIONS_LIST,\r\n  GET_OPTIONS_LIST_FAILURE,\r\n  GET_OPTIONS_LIST_REQUEST,\r\n  GET_OPTIONS_LIST_SUCCESS,\r\n  SearchActions,\r\n} from \"../actions/searchActions\";\r\n\r\ntype SearchState = {\r\n  optionsList: LocationType[] | null;\r\n  optionsListRequest: boolean;\r\n  optionsListFailure: boolean;\r\n};\r\n\r\nconst initialState: SearchState = {\r\n  optionsList: null,\r\n  optionsListRequest: false,\r\n  optionsListFailure: false,\r\n};\r\n\r\nexport const SearchReducer = (\r\n  state = initialState,\r\n  action: SearchActions\r\n): SearchState => {\r\n  switch (action.type) {\r\n    case GET_OPTIONS_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        optionsListRequest: true,\r\n      };\r\n    case GET_OPTIONS_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        optionsListRequest: false,\r\n        optionsList: action.payload,\r\n      };\r\n    case GET_OPTIONS_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        optionsListRequest: false,\r\n        optionsListFailure: true,\r\n      };\r\n    case DELETE_OPTIONS_LIST:\r\n      return {\r\n        ...state,\r\n        optionsList: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { MainReducer } from \"./mainReducer\";\r\nimport { FavoritesReducer } from \"./favoritesReducer\";\r\nimport { ParametersReducer } from \"./parametersReducer\";\r\nimport { SearchReducer } from \"./searchReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  MainReducer,\r\n  FavoritesReducer,\r\n  ParametersReducer,\r\n  SearchReducer,\r\n});\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers\";\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../src/redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}